security:
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        chain_provider:
            chain:
                providers: [in_memory, in_database]
        in_memory:
            memory:
                users:
                    user:  { password: 45f106ef4d5161e7aa38cf6c666607f25748b6ca, roles: [ 'ROLE_USER' ] }
                    admin: { password: 74913f5cd5f61ec0bcfdb775414c2fb3d161b620, roles: [ 'ROLE_SUPER_ADMIN' ] }
        in_database:
            entity: {class: HW3\UserBundle\Entity\User, property: username}

    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: sha1
            iterations: 1
            encode_as_base64: false

        HW3\UserBundle\Entity\User:
            algorithm: sha1
            iterations: 1
            encode_as_base64: false

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login_firewall:
            pattern: ^/(en|fa)/login$
            anonymous: ~

        secured_area:
            pattern: ^/
            form_login:
                login_path: login
                check_path: login_check

            logout:
                path: logout
                target: /

            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/(en|fa)/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }